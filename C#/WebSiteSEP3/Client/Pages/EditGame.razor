@page "/EditGame/{gameNameToEdit}"
@using Client.Data
@using Client.Models
@inject IGameService _gameService;
<h3>Edit Game</h3>

@attribute [Authorize(Policy = "Administrator")]
@inject NavigationManager _navigationManager;
<AuthorizeView Context="Auth" Policy="Administrator">
    
    <EditForm OnValidSubmit="@AddGameAsync">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="form-group">
            Game Name:<br/>
            <InputTextArea rows="4" @bind-Value="gameToSend.GameName"/>
        </div>
        <div class="form-group">
            Game Price:<br/>
            <InputNumber @bind-Value="gameToSend.Price"/>
        </div>
        <div class="form-group">
            Game Photo URL:<br/>
            <InputTextArea rows="5" @bind-Value="gameToSend.Photo"/>
        </div>
        <div class="form-group">
            ESBR Rating:<br/>
            <InputTextArea rows="3" @bind-Value="gameToSend.ESRB"/>
        </div>
        <div class="form-group">
            IGN Rating:<br/>
            <InputNumber @bind-Value="gameToSend.IGN"/>
        </div>
        <div class="form-group">
            Description:<br/>
            <InputTextArea cols="50" rows="3" @bind-Value="gameToSend.Description"/>
        </div>
        <div class="form-group">
            Specifications:<br/>
            <InputTextArea cols="50" rows="3" @bind-Value="gameToSend.Specifications"/>
        </div>
        <div class="form-group">
            Release Date:<br/>
            <InputDate rows="1" @bind-Value:format="yyyy-MM-dd" @bind-Value="dateTime" />
        </div>
        <p class="actions">
            <button class="btn btn-outline-dark" type="submit">Add Game</button>
        </p>


    </EditForm>
</AuthorizeView>

@code {
    private Game gameToEdit = new Game();
    private string gameNameToEdit;
    private string errorMessage = "";
    private DateTime dateTime;
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            gameToEdit = await _gameService.getGameAsync(gameNameToEdit);
            dateTime = new DateTime(Convert.ToInt16(gameToEdit.ReleaseDate.Substring(0, 4)), Convert.ToInt16(gameToEdit.ReleaseDate.Substring(5, 2)), Convert.ToInt16(gameToEdit.ReleaseDate.Substring(8, 2)));
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorMessage = e.Message;
        }
    }

}