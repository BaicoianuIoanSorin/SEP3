@page "/ShoppingCart/{Username}"
@using Client.Models
@using Client.Data
@using System.Security.Claims
@inject IGameService GameService;
@inject NavigationManager NavigationManager
<h3>ShoppingCart</h3>
<div class="panel panel-info">
    <div class="panel-heading">
        <h3 class="panel-title">Order Summary</h3>
    </div>
    <div class="panel-body">
        <div id="update-message">
        </div>
        <table class="table table-striped table-hover ">
            <thead>
            <tr>
                <th>
                    Game Name
                </th>
                <th>
                    Price (each)
                </th>
                <th></th>
            </tr>
            </thead>
            @if (!(_gameCluster == null) || (_gameCluster != null && _gameCluster.GamesStack.Count < 1))
            {
                @foreach (var game in _gameCluster.GamesStack)
                {
                    <tr>
                        <td>
                            @game.GameName
                        </td>
                        <td>
                            $@string.Format("{0:f}", Math.Round(game.Price, 2).ToString())
                        </td>
                        <td>
                            <button class="btn btn-danger oi oi-trash" @onclick="(() => removeFromCart(game.GameId))"></button>
                        </td>
                    </tr>
                }

                <tr class="info">
                    <td></td>
                    <td></td>
                    <td></td>
                    <td id="cart-total">
                        <h3> Total : $@string.Format("{0:f}", Math.Round(getTotalPrice(), 2).ToString())</h3>
                    </td>
                    <td>
                        <button class="btn btn-info" @onclick="buyAll"><span class="oi oi-basket"></span> Buy all</button>
                    </td>
                    
                </tr>
            }
            else if(_gameCluster == null)
            {
            <div class="custom-bg">
                <p>There are no items in your cart currently. Please shop for something and add items..</p>
            </div>
            }
        </table>
    </div>
</div>



@code {
    GameCluster _gameCluster;

    string errorMessage ="";

    [Parameter]
    public string Username { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        errorMessage = "";
        try
        {
            
            _gameCluster = await GameService.getShoppingCartAsync(Username);
        }
        catch (Exception e)
        {
            Console.WriteLine(errorMessage = e.Message);
            Console.WriteLine("Error while getting shopping cart");
        }
    }

    public double getTotalPrice()
    {
        double total = 0;
        foreach (var game in _gameCluster.GamesStack)
        {
            total += game.Price;
        }
        return total;
    }
    
    public async Task removeFromCart(int gameId)
    {
        try
        {
            await GameService.removeGameFromShoppingCartAsync(Username, gameId);
            _gameCluster = await GameService.getShoppingCartAsync(Username);
            if (_gameCluster.GamesStack.Count == 0)
            {
                _gameCluster = null;
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            Console.WriteLine("Exception when removing from shopping cart");
        }
    }

    public async Task buyAll()
    {
        NavigationManager.NavigateTo	($"/orderlater/{Username}");
    }

}