<!-- TODO Order now button -->
<!-- TODO Shopping cart button -->
<!-- TODO Make same small adjustments for page -->


@page "/GameInformation/{GameName}"
@using Client.Models
@using Client.Data
@using Microsoft.AspNetCore.Mvc.Formatters
@using System.Security.Claims
@using System.Diagnostics.Eventing.Reader
@inject IGameService GameService
@inject NavigationManager NavigationManager
<h3>GameInformation</h3>

@if (game != null)
{
    <div class="container-fluid">
        <div class="row d-flex justify-content-center">
            <div class="text-info">
                <p style="color: red">@errorMessage</p>
            </div>
            <div class="col-lg-10 mt-5 pt-5" id="color">
                <div class="row shadow p-3">
                    <div class="col-lg-4 rounded-left">
                        <div class="card" style="width: 21rem;">
                            <img class="card-img-top" src="@GetImage(game)" alt="Image of @game.GameName" title="Order @game.GameName"/>
                            <div class="card-body">
                                <h3 class="card-title">@game.GameName</h3>
                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item">
                                        <p class="font-weight-bold">
                                            $@string.Format("{0:f}", Math.Round(game.Price, 2).ToString())
                                        </p>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 bg-light">
                        <h3 class="mt-3">@game.GameName</h3>
                        <hr class="badge-primary mt-0 w-25">
                        <div class="row text-center">
                            <div class="col-sm-6 float-right">
                                <p class="font-weight-bold float-left" style="color: yellow">IGN Rating: @game.IGN</p>
                            </div>
                            <div class="col-sm-6">
                                <p class="font-weight-bold float-right">
                                    ESRB Rating: @game.ESRB
                                </p>
                            </div>
                        </div>
                        <h3 class="mt-3 text-justify text-center">Description</h3>
                        <hr class="badge-primary mt-0 w-25">
                        <div class="row">
                            <div class="col-sm-12">
                                <p class="text-center">@game.Description</p>
                            </div>
                        </div>
                        <h3 class="mt-3 text-justify text-center">Specifications</h3>
                        <hr class="badge-primary mt-0 w-25">
                        <div class="row">
                            <div class="col-sm-12">
                                <p class="text-center">@game.Specifications</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 rounded-right">
                        <div class="row">
                            @if (!disableButton)
                            {
                                <div class="col-sm-6 float-left">
                                    <button class="btn btn-warning btn-rounded" @onclick="OrderNow">Order now</button>
                                </div>
                            }
                            else
                            {
                                <div class="col-sm-6 float-left">
                                    <button class="btn btn-warning btn-rounded disabled" @onclick="OrderNow">Order now</button>
                                </div>
                            }
                            <div class="col-sm-6 float-right">
                                <button class="btn btn-danger disabled" @onclick="(() => AddToShoppingCart(game))">Add to shopping cart</button>
                            </div>
                        </div>
                        <AuthorizeView>
                            <div class="col-sm-6 float-right">
                                <button class="btn btn-danger" @onclick="EditGame"></button>
                            </div>
                        </AuthorizeView>
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <h1>Game not found or API still works...</h1>
}

@code {

    private ClaimsPrincipal _claimsPrincipal;

    [CascadingParameter]
    protected Task<AuthenticationState> AuthState { get; set; }

    private string username;

    [Parameter]
    public string GameName { get; set; }

    [Inject]
    IJSRuntime _jsRuntime { get; set; }

    private Game game;
    private string errorMessage;
    private Boolean disableButton = false;

    protected override async Task OnInitializedAsync()
    {
        errorMessage = "";
        try
        {
            game = await GameService.getGameAsync(GameName);
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

    protected override async void OnParametersSet()
    {
        _claimsPrincipal = (await AuthState).User;
        username = _claimsPrincipal.Identity.Name;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (game != null)
            {
                var value = Math.Round(game.Price, 2);
                await _jsRuntime.InvokeVoidAsync("LoadButtonPaypal", value, game.GameName);
            }
        }
    }

    public string GetImage(Game game)
    {
        return $"Images/Games/{game.GameName}.png";
    }

    public void OrderNow()
    {
        NavigationManager.NavigateTo($"/checkoutnow/{game.GameName}");
        }

    public async Task AddToShoppingCart(Game game)
    {
        await GameService.addGameToShoppingCartAsync(username, game.GameId);
    }

    public void EditGame()
    {
        NavigationManager.NavigateTo($"/EditGame/{game.GameName}");
    }
}