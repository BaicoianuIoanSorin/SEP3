@page "/PaymentSuccessfully/{GameName}/{TransactionId}"
@using Client.Data
@using Client.Models
@using System.Security.Cryptography.X509Certificates
@using System.Security.Claims
@using Microsoft.VisualBasic
@using System.Collections
@inject IGameService _gameService
@inject IUserService _userService
<h3 class="text-center text-info">Payment Successfully, game: @GameName</h3>
@if (!buttonPressed)
{
    <button class="btn-info" @onclick="GetReceipt">Get Receipt</button>
}
else
{
    <div class="container">
        <div class="row d-flex justify-content-center">
            <div class="col-md-10 mt-5 pt-5">
                <div class="row z-depth-3">
                    <div class="col-sm-4 bg-info rounded-left">
                        <div class="card-block text-center text-white">
                            <i class="fas fa-user-tie fa-7x mt-5"></i>
                            <p>Receipt info</p>
                            <p>Transaction ID: @TransactionId</p>
                            <img src="Images/Games/@game.Photo" alt="Game photo" style="width: 60px; height: 60px;" class="rounded-circle">
                            <i class="far fa-edit-tie fa-2x mb-5"></i>
                        </div>
                    </div>
                    <div class="col-sm-8 bg-light rounded-right">
                        <h3 class="mt-3 text-center">User information</h3>
                        <hr class="badge-primary mt-0 w-25">
                        <div class="row text-center">
                            <div class="col-sm-6">
                                <p class="font-weight-bold">First name: @_user.FirstName</p>
                            </div>
                            <div class="col-sm-6">
                                <p class="font-weight-bold">Last name: @_user.LastName</p>
                            </div>
                        </div>
                        <h3 class="mt-3 text-center">Game bought</h3>
                        <hr class="badge-primary mt-0 w-25">
                        <div class="row text-center">
                            <div class="col-sm-6">
                                <p class="font-weight-bold">Game name: @game.GameName</p>
                            </div>
                            <div class="col-sm-6">
                                <p class="font-weight-bold">Price: @Math.Round(game.Price, 2)</p>
                            </div>
                        </div>
                        <div class="text-center">
                            <hr class="badge-primary mt-0 w-25">
                            <div>@_key</div>
                            <button class="btn-info" @onclick="GetKey">Get ProductKey</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}




@code {

    [Parameter]
    public string GameName { get; set; }

    [Parameter]
    public string TransactionId { get; set; }

    private string _key = "";
    private Boolean buttonPressed;
    private ClaimsPrincipal _claimsPrincipal;

    //Variables for game and user to get receipt
    public Game game { get; set; }
    private User _user = new User();

    public string username { get; set; }

    [CascadingParameter]
    protected Task<AuthenticationState> AuthState { get; set; }

    protected override async void OnParametersSet()
    {
        if (AuthState != null)
        {
            _claimsPrincipal = (await AuthState).User;
            username = _claimsPrincipal.Identity.Name;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            game = await _gameService.getGameAsync(GameName);
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }

    public async Task GetReceipt()
    {
        try
        {
            _user = await _userService.GetUser(username);
            buttonPressed = true;
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }

    public async Task GetKey()
    {
        _key = "";
        try
        {
            if (_key.Length > 0)
            {
                _key += "\n You already got the key.";
            }
            else
            {
                GameKey gameKey = await _gameService.getProductKeyAsync(game.GameId,username);
                _key = gameKey.Key;
            }
        }
        catch (Exception e)
        {
            _key = e.Message;
        }
    }

}