@using Client.Authentication
@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Client</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" @onclick="PerformProfile">
                <span class="oi oi-person" aria-hidden="true"></span>Profile
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" @onclick="PerformShoppingCart">
                <span class="oi oi-cart" aria-hidden="true"></span>Shopping Cart
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" @onclick="PerformGameLibrary">
                <span class="oi oi-list-rich" aria-hidden="true"></span>Game Library
            </NavLink>
        </li>
        <AuthorizeView Policy="Administrator">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="AddGame" @onclick="PerformAddGame">
                    <span class="oi oi-laptop" aria-hidden="true"></span>Add Game
                </NavLink>
            </li>
        </AuthorizeView>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="login" @onclick="PerformLogout">
                <span class="oi oi-account-logout" aria-hidden="true"></span>Log out
            </NavLink>
        </li>

    </ul>
</div>

@code {
    private string username;
    
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async void OnParametersSet()
    {
        var claimsPrincipal = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User;
        if (claimsPrincipal.Identity.IsAuthenticated)
        {
            username = claimsPrincipal.Identity.Name;
        }
    }
    
    public async Task PerformLogout()
    {
        try
        {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            _navigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
        }
    }

    public void PerformProfile()
    {
        _navigationManager.NavigateTo($"/Profile/{username}");
    }
    
    public void PerformShoppingCart()
    {
        _navigationManager.NavigateTo($"/ShoppingCart/{username}");
    }

    public void PerformGameLibrary()
    {
        _navigationManager.NavigateTo($"/GameLibrary/{username}");
    }

    public void PerformAddGame()
    {
        _navigationManager.NavigateTo("/AddGame");
    }

}